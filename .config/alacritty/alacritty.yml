window:
  # decorations: full
  opacity: 0.9
  title: Alacritty
  class:
    instance: Alacritty
    general: Alacritty
font:
  normal:
    family: CaskaydiaCove Nerd Font
    style: Book
  bold:
    family: CaskaydiaCove Nerd Font
    style: Bold
  italic:
    family: CaskaydiaCove Nerd Font
    style: Italic
  bold_italic:
    family: CaskaydiaCove Nerd Font
    style: Bold Italic
  size: 12
  # use_thin_strokes: false
draw_bold_text_with_bright_colors: true
schemes:
  SpaceDuck: &SpaceDuck
    primary:
      background: "#090e13"
      foreground: "#c0caf5"
    selection:
      text: "#ffffff"
      background: "#686f9a"
    # Normal colors
    normal:
      black: "#414868"
      red: "#f7768e"
      green: "#9ece6a"
      yellow: "#e0af68"
      blue: "#7aa2f7"
      magenta: "#bb9af7"
      cyan: "#7dcfff"
      white: "#a9b1d6"
    # Bright colors
    bright:
      black: "#414868"
      red: "#f7768e"
      green: "#9ece6a"
      yellow: "#e0af68"
      blue: "#7aa2f7"
      magenta: "#bb9af7"
      cyan: "#7dcfff"
      white: "#c0caf5"
  gruvbox: &gruvbox
    primary:
      # hard contrast:
      background: "0x1d2021"
      # background: "#282828"
      foreground: "#ebdbb2"
      # Normal colors
      normal:
        black: "#282828"
        red: "#cc241d"
        green: "#98971a"
        yellow: "#d79921"
        blue: "#458588"
        magenta: "#b16286"
        cyan: "#689d6a"
        white: "#a89984"
      # Bright colors
      bright:
        black: "#928374"
        red: "#fb4934"
        green: "#b8bb26"
        yellow: "#fabd2f"
        blue: "#83a598"
        magenta: "#d3869b"
        cyan: "#8ec07c"
        white: "#ebdbb2"
  gruvboxMaterial: &gruvboxMaterial
    primary:
      background: "0x1a1b26"
      foreground: "0xd4be98"
    normal:
      black: "0x32302f"
      red: "0xea6962"
      green: "0xa9b665"
      yellow: "0xd8a657"
      blue: "0x7daea3"
      magenta: "0xd3869b"
      cyan: "0x89b482"
      white: "0xd4be98"
    bright:
      black: "0x32302f"
      red: "0xea6962"
      green: "0xa9b665"
      yellow: "0xd8a657"
      blue: "0x7daea3"
      magenta: "0xd3869b"
      cyan: "0x89b482"
      white: "0xd4be98"
  tokyoNight: &tokyoNight
    primary:
      background: '#0f111a'
      foreground: '0xc0caf5'

  # Normal colors
    normal:
      black:   '0x15161e'
      red:     '0xf7768e'
      green:   '0x9ece6a'
      yellow:  '0xe0af68'
      blue:    '0x7aa2f7'
      magenta: '0xbb9af7'
      cyan:    '0x7dcfff'
      white:   '0xa9b1d6'

    # Bright colors
    bright:
      black:   '0x414868'
      red:     '0xf7768e'
      green:   '0x9ece6a'
      yellow:  '0xe0af68'
      blue:    '0x7aa2f7'
      magenta: '0xbb9af7'
      cyan:    '0x7dcfff'
      white:   '0xc0caf5'

    indexed_colors:
      - { index: 16, color: '0xff9e64' }
      - { index: 17, color: '0xdb4b4b' }
colors: *tokyoNight
selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"
  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true
# Allow terminal applications to change Alacritty's window title.
# dynamic_title: true
cursor:
  # vi_mode_style: Block
  unfocused_hollow: true
  # style:
  #   blinking: "On"
live_config_reload: true
# Default:
# shell:
#   program: /bin/fish
#   args:
#     - --login
mouse:
  hide_when_typing: true
hints:
  alphabet: jfkdls;ahgurieowpq
  enabled:
    # - regex: "(mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)[^\0\-\x1F\x7F-\x9F<>\"\\s{-}\\^⟨⟩`]+"
    #   action: Copy
    #   mouse:
    #     enabled: true
    #     mods: Control
    #   binding:
    #     key: U
    #     mods: Control|Shift
    - regex: "[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+"
      action: Copy
      mouse:
        enabled: true
        mods: None
      binding:
        key: E
        mods: Control|Shift
mouse_bindings:
  - {mouse: Middle, action: PasteSelection}
  - {mouse: Left, action: CopySelection}
# - `action`: Execute a predefined action
#
#   - ToggleViMode
#   - SearchForward
#       Start searching toward the right of the search origin.
#   - SearchBackward
#       Start searching toward the left of the search origin.
#   - Copy
#   - Paste
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollHalfPageUp
#   - ScrollHalfPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#       Remove the terminal's scrollback history.
#   - Hide
#       Hide the Alacritty window.
#   - Minimize
#       Minimize the Alacritty window.
#   - Quit
#       Quit Alacritty.
#   - ToggleFullscreen
#   - SpawnNewInstance
#       Spawn a new instance of Alacritty.
#   - ClearLogNotice
#       Clear Alacritty's UI warning and error notice.
#   - ClearSelection
#       Remove the active selection.
#   - ReceiveChar
#   - None
#
# - Vi mode exclusive actions:
#
#   - Open
#       Open URLs at the cursor location with the launcher configured in
#       `url.launcher`.
#   - ToggleNormalSelection
#   - ToggleLineSelection
#   - ToggleBlockSelection
#   - ToggleSemanticSelection
#       Toggle semantic selection based on `selection.semantic_escape_chars`.
#
# - Vi mode exclusive cursor motion actions:
#
#   - Up
#       One line up.
#   - Down
#       One line down.
#   - Left
#       One character left.
#   - Right
#       One character right.
#   - First
#       First column, or beginning of the line when already at the first column.
#   - Last
#       Last column, or beginning of the line when already at the last column.
#   - FirstOccupied
#       First non-empty cell in this terminal row, or first non-empty cell of
#       the line when already at the first cell of the row.
#   - High
#       Top of the screen.
#   - Middle
#       Center of the screen.
#   - Low
#       Bottom of the screen.
#   - SemanticLeft
#       Start of the previous semantically separated word.
#   - SemanticRight
#       Start of the next semantically separated word.
#   - SemanticLeftEnd
#       End of the previous semantically separated word.
#   - SemanticRightEnd
#       End of the next semantically separated word.
#   - WordLeft
#       Start of the previous whitespace separated word.
#   - WordRight
#       Start of the next whitespace separated word.
#   - WordLeftEnd
#       End of the previous whitespace separated word.
#   - WordRightEnd
#       End of the next whitespace separated word.
#   - Bracket
#       Character matching the bracket at the cursor's location.
#   - SearchNext
#       Beginning of the next match.
#   - SearchPrevious
#       Beginning of the previous match.
#   - SearchStart
#       Start of the match to the left of the vi mode cursor.
#   - SearchEnd
#       End of the match to the right of the vi mode cursor.
#
# - Search mode exclusive actions:
#   - SearchFocusNext
#       Move the focus to the next search match.
#   - SearchFocusPrevious
#       Move the focus to the previous search match.
#   - SearchConfirm
#   - SearchCancel
#   - SearchClear
#       Reset the search regex.
#   - SearchDeleteWord
#       Delete the last word in the search regex.
#   - SearchHistoryPrevious
#       Go to the previous regex in the search history.
#   - SearchHistoryNext
#       Go to the next regex in the search history.
#
# - macOS exclusive actions:
#   - ToggleSimpleFullscreen
#       Enter fullscreen without occupying another space.
#
# - Linux/BSD exclusive actions:
#
#   - CopySelection
#       Copy from the selection buffer.
#   - PasteSelection
#       Paste from the selection buffer.
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Search
#    - Alt
#    - Vi
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
key_bindings:
  - {key: Paste, action: Paste}
  - {key: Copy, action: Copy}
  # - { key: F11,                                  action: ToggleFullscreen}
  - {key: V, mods: Control|Shift, action: Paste}
  - {key: C, mods: Control|Shift, action: Copy}
  - {key: F, mods: Control|Shift, action: SearchForward}
  - {key: B, mods: Control|Shift, action: SearchBackward}
  - {key: L, mods: Control, action: ClearLogNotice}
  - {key: L, mods: Control, mode: ~Vi, chars: "\f"}
  - {key: Up, mods: Shift|Control, mode: ~Alt, action: ScrollLineUp}
  - {key: Down, mods: Shift|Control, mode: ~Alt, action: ScrollLineDown}
  - {key: PageUp, mods: Shift|Control, mode: ~Alt, action: ScrollPageUp}
  - {key: PageDown, mods: Shift|Control, mode: ~Alt, action: ScrollPageDown}
  - {key: Up, mods: Shift, mode: ~Alt, action: ScrollLineUp}
  - {key: Down, mods: Shift, mode: ~Alt, action: ScrollLineDown}
  - {key: PageUp, mods: Shift, mode: ~Alt, action: ScrollPageUp}
  - {key: PageDown, mods: Shift, mode: ~Alt, action: ScrollPageDown}
  - {key: Home, mods: Shift, mode: ~Alt, action: ScrollToTop}
  - {key: End, mods: Shift, mode: ~Alt, action: ScrollToBottom}
  # - {key: C,mods: Control|Shift, mode: Vi, action: ClearSelection}
  # - {key: Insert, mods: Shift, action: PasteSelection}
  - {key: Key0, mods: Control, action: ResetFontSize}
  - {key: Equals, mods: Control, action: IncreaseFontSize}
  - {key: Minus, mods: Control, action: DecreaseFontSize}
  # Vi Mode
  - {key: Space, mods: Shift|Control, mode: Vi, action: ScrollToBottom}
  - {key: Space, mods: Shift|Control, action: ToggleViMode}
  - {key: Escape, mods: Alt, action: ToggleViMode}
  - {key: Escape, mode: Vi, action: ClearSelection}
  - {key: I, mode: Vi, action: ScrollToBottom}
  - {key: I, mode: Vi, action: ToggleViMode}
  # - {key: Y, mods: Control, mode: Vi, action: ScrollLineUp}
  # - {key: E, mods: Control, mode: Vi, action: ScrollLineDown}
  - {key: G, mode: Vi, action: ScrollToTop}
  - {key: G, mods: Shift, mode: Vi, action: ScrollToBottom}
  - {key: B, mods: Control, mode: Vi, action: ScrollPageUp}
  - {key: F, mods: Control, mode: Vi, action: ScrollPageDown}
  - {key: U, mods: Control, mode: Vi, action: Open}
  - {key: D, mods: Control, mode: Vi, action: ScrollHalfPageDown}
  - {key: Y, mode: Vi, action: Copy}
  # - {key: Y, mode: Vi, action: ClearSelection}
  # - {key: Copy, mode: Vi, action: ClearSelection}
  - {key: V, mode: Vi, action: ToggleNormalSelection}
  - {key: V, mods: Shift, mode: Vi, action: ToggleLineSelection}
  - {key: V, mods: Control, mode: Vi, action: ToggleBlockSelection}
  - {key: V, mods: Alt, mode: Vi, action: ToggleSemanticSelection}
  - {key: Return, mode: Vi, action: Open}
  - {key: K, mode: Vi, action: Up}
  - {key: K, mods: Shift, mode: Vi, action: ScrollHalfPageUp}
  - {key: J, mode: Vi, action: Down}
  - {key: J, mods: Shift, mode: Vi, action: ScrollHalfPageDown}
  - {key: H, mode: Vi, action: Left}
  - {key: L, mode: Vi, action: Right}
  - {key: Up, mode: Vi, action: Up}
  - {key: Down, mode: Vi, action: Down}
  - {key: Left, mode: Vi, action: Left}
  - {key: Right, mode: Vi, action: Right}
  - {key: Key0, mode: Vi, action: FirstOccupied}
  - {key: Key4, mode: Vi, action: Last}
  # - {key: Key6,mods: Shift,mode: Vi, action: FirstOccupied}
  - {key: H, mods: Shift, mode: Vi, action: High}
  - {key: M, mods: Shift, mode: Vi, action: Middle}
  - {key: L, mods: Shift, mode: Vi, action: Low}
  - {key: B, mode: Vi, action: SemanticLeft}
  - {key: W, mode: Vi, action: SemanticRight}
  - {key: E, mode: Vi, action: SemanticRightEnd}
  - {key: B, mods: Shift, mode: Vi, action: WordLeft}
  - {key: W, mods: Shift, mode: Vi, action: WordRight}
  - {key: E, mods: Shift, mode: Vi, action: WordRightEnd}
  # - {key: Key5, mods: Shift, mode: Vi, action: Bracket}
  - {key: Slash, mode: Vi, action: SearchForward}
  - {key: Slash, mods: Shift, mode: Vi, action: SearchBackward}
  - {key: N, mode: Vi, action: SearchNext}
  - {key: N, mods: Shift, mode: Vi, action: SearchPrevious}
