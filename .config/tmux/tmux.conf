setw -g mode-keys vi
set-option -g prefix C-s
unbind-key C-a
bind-key C-s send-prefix

setw -g mouse on
set -g detach-on-destroy off
# Focus events will trigger autoread inside vim
set -g focus-events on
set -sg terminal-overrides ",*:RGB"
set -g default-terminal "${TERM}"
# undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
setw -g xterm-keys on
unbind M-l

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Easy config reload
unbind r
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded."

bind -n C-PgUp select-window -t :-
bind -n C-PgDn select-window -t :+
bind -n C-M-j select-window -t :-
bind -n C-M-k select-window -t :+

# open new window gnome-terminal style
bind-key t new-window -c "#{pane_current_path}"
bind-key -n M-t new-window
bind-key x kill-window
bind-key q kill-pane

# move windows forward and backwards, gnome-terminal style
bind-key -n C-S-Left swap-window -t -1 \; select-window -t :-
bind-key -n C-S-Right swap-window -t +1 \; select-window -t :+

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind-key -n M-Up resize-pane -U 5
bind-key -n M-Down resize-pane -D 5
bind-key -n M-Left resize-pane -L 5
bind-key -n M-Right resize-pane -R 5

bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4

# primary, secondary, and clipboard
# set -g @yank_selection_mouse 'clipboard'

set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'Morantron/tmux-fingers'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'christoomey/vim-tmux-navigator'
setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.config/tmux/plugins/"
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"
run -b '~/.config/tmux/plugins/tpm/tpm'
# set -g default-command /bin/fish
# set -g default-shell /bin/fish
set -g set-clipboard on
# set -g @override_copy_command 'xclip -i -r -sel clip'

# set -g @yank_selection 'primary'
set -g @yank_selection_mouse 'clipboard'
# set -g @yank_with_mouse on

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi i send -X cancel
bind -T copy-mode-vi Y send-keys -X copy-line
bind -T copy-mode-vi y send -X copy-pipe "xclip -i -sel clip"
if "test $XDG_SESSION_TYPE = 'wayland'" \
     "bind -T copy-mode-vi y send -X copy-pipe 'wl-copy -n'"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -i -sel clip"
if "test $XDG_SESSION_TYPE = 'wayland'" \
     "bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe 'wl-copy -n'"
# bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Searching using fzf
# URl open
bind C-u run -b "tmux capture-pane -J -p | xurls | fzf-tmux --prompt='open link => ' -d20 --multi --bind alt-a:select-all,alt-d:deselect-all | xargs -r -I{} xdg-open {} &!"
# URL copy
bind C-y run -b "tmux capture-pane -J -p | xurls | fzf-tmux --prompt='copy link => '  -d20 --multi --bind alt-a:select-all,alt-d:deselect-all | xargs -r -I {} xclip -r -i -sel clip {}"
if "test $XDG_SESSION_TYPE = 'wayland'" \
  "bind C-y run -b \"tmux capture-pane -J -p | xurls | fzf-tmux --prompt='copy link => '  -d20 --multi --bind alt-a:select-all,alt-d:deselect-all | xargs -r -I{} wl-copy -n {}\""
# EMAIl copy
bind C-e run -b "xclip -r -i -sel clip <(tmux capture-pane -J -p | command grep -oE '*[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,6}*' | fzf-tmux --prompt='copy email => ' -d20 --multi --bind alt-a:select-all,alt-d:deselect-all | xargs -r)"
# IP paste
bind C-i run -b "tmux set-buffer -b primary_selection \"$(tmux capture-pane -J -p | grep -oE '[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}' | fzf-tmux -d20 --multi --bind alt-a:select-all,alt-d:deselect-all)\"; tmux paste-buffer; tmux delete-buffer"
# Filename paste
bind C-f run -b "tmux set-buffer -b primary_selection \"$(tmux capture-pane -J -p | command grep -oE '(^|^\.|[[:space:]]|[[:space:]]\.|[[:space:]]\.\.|^\.\.)[[:alnum:]~_-]*/[][[:alnum:]_.#$%&+=/@-]*' | fzf-tmux -d20 --multi --bind alt-a:select-all,alt-d:deselect-all)\"; tmux paste-buffer; tmux delete-buffer"
