# vim:filetype=hyprlang
# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod,       Return, exec, $terminal
bind = $mainMod SHIFT, Return, exec, ghostty || kitty
# bind = $mainMod,       W, exec, $BROWSER || firefox || flatpak run one.ablaze.floorp
# bind = $mainMod SHIFT, W, exec, brave-browser || brave || flatpak run com.github.Eloston.UngoogledChromium || chromium || firefox
bind = $mainMod,       W, exec, flatpak run com.brave.Browser
bind = $mainMod SHIFT, W, exec, flatpak run io.gitlab.librewolf-community
# bind = $mainMod SHIFT, W, exec, flatpak run io.github.ungoogled_software.ungoogled_chromium
bind = $mainMod SHIFT, Q, killactive,
bind = $mainMod,       D, exec, rofi -show run -config ~/.config/rofi/dmenu.rasi
bind = $mainMod CONTROL,X, exit,
bind = $mainMod,       E, exec, thunar || pcmanfm || nemo || nautilus || notify-send -t 1500 -u critical "Failed to open File manager" "Thunar or Pcmanfm or Nemo or Nautilus is not installed "
bind = $mainMod SHIFT, E, exec, kitty -e yazi
bind = $mainMod,       S, togglefloating,
bind = $mainMod SHIFT, S, pin
bind = $mainMod,       F, fullscreen
bind = $mainMod,       M, fullscreen, 1
bind = $mainMod,       R, exec, $menu
bind = $mainMod,       G, exec, qalculate-gtk || gnome-calculator || galculator || notify-send "Error" "Calculator App not installed" -u critical
bind = ALT CONTROL,    V, exec, pavucontrol || pavucontrol-qt || notify-send "Error" "Pavucontrol not installed" -u critical
bind = $mainMod,       P, pseudo, # dwindle
# bind = $mainMod,       Y, exec, cliphist list | rofi -dmenu -config ~/.config/rofi/colors-rofi-dark.rasi | cliphist decode | wl-copy
bind = $mainMod,       Y, exec,  cliphist list | rofi -dmenu -config ~/.config/rofi/iceberg-dark.rasi | cliphist decode | wl-copy -n

bind = $mainMod CONTROL,S, exec, logout_prompt
# bind = ALT CONTROL,     C, exec, hyprpicker -a || notify-send -u critical "Program not Installed" "hyprpicker is not installed"
bind = ALT CONTROL,     C, exec, zenity --color-selection || notify-send -u critical "Program not Installed" "zenity is not installed"
# bind = $mainMod, J, togglesplit, # dwindle

# Move focus with mainMod + arrow keys
# bind = $mainMod, left,  movefocus, l
# bind = $mainMod, right, movefocus, r
# bind = $mainMod, up,    movefocus, u
# bind = $mainMod, down,  movefocus, d
bind = $mainMod,       h, movefocus,  l
bind = $mainMod,       j, layoutmsg, cyclenext noloop
bind = $mainMod,       k, layoutmsg, cycleprev noloop
bind = $mainMod,       l, movefocus,  r
bind = $mainMod SHIFT, h, swapwindow, l
bind = $mainMod SHIFT, j, layoutmsg, swapnext loop
bind = $mainMod SHIFT, k, layoutmsg, swapprev loop
bind = $mainMod SHIFT, l, swapwindow, r

bind = ALT, Tab,     layoutmsg, cycleprev loop

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, focusworkspaceoncurrentmonitor, 1
bind = $mainMod, 2, focusworkspaceoncurrentmonitor, 2
bind = $mainMod, 3, focusworkspaceoncurrentmonitor, 3
bind = $mainMod, 4, focusworkspaceoncurrentmonitor, 4
bind = $mainMod, 5, focusworkspaceoncurrentmonitor, 5
bind = $mainMod, 6, focusworkspaceoncurrentmonitor, 6
bind = $mainMod, 7, focusworkspaceoncurrentmonitor, 7
bind = $mainMod, 8, focusworkspaceoncurrentmonitor, 8
bind = $mainMod, 9, focusworkspaceoncurrentmonitor, 9
bind = $mainMod, 0, focusworkspaceoncurrentmonitor, 10

bind = $mainMod,       Tab,          focusworkspaceoncurrentmonitor, previous
bind = $mainMod,       grave,        focusworkspaceoncurrentmonitor, e+1
bind = $mainMod SHIFT, grave,        focusworkspaceoncurrentmonitor, e-1
bind = $mainMod,       apostrophe,   focusworkspaceoncurrentmonitor, e+1
bind = $mainMod,       semicolon,    focusworkspaceoncurrentmonitor, e-1
bind = $mainMod SHIFT, apostrophe,   movetoworkspace,                e+1
bind = $mainMod SHIFT, semicolon,    movetoworkspace,                e-1
bind = $mainMod,       bracketright, focusworkspaceoncurrentmonitor, +1
bind = $mainMod,       bracketleft,  focusworkspaceoncurrentmonitor, -1
bind = $mainMod SHIFT, bracketright, movetoworkspace,                +1
bind = $mainMod SHIFT, bracketleft,  movetoworkspace,                -1

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
# bind = $mainMod, S, togglespecialworkspace, magic
# bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod,       mouse_down, workspace, e+1
bind = $mainMod,       mouse_up,   workspace, e-1
bind = $mainMod,       comma,      focusmonitor, -1
bind = $mainMod,       period,     focusmonitor, +1
bind = $mainMod SHIFT, comma,      movecurrentworkspacetomonitor, -1
bind = $mainMod SHIFT, period,     movecurrentworkspacetomonitor, +1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

binde =, XF86AudioRaiseVolume,  exec, audio inc
binde =, XF86AudioLowerVolume,  exec, audio dec
bindl =, XF86AudioMute,         exec, audio toggle
bindl =, XF86MonBrightnessUp,   exec, brightnessctl s 5+ && notify-send "Brightness: " -t 2000 -i display-brightness -h string:x-canonical-private-synchronous:backlight -h int:value:$(brightnessctl g)
bindl =, XF86MonBrightnessDown, exec, brightnessctl s 5- && notify-send "Brightness: " -t 2000 -i display-brightness -h string:x-canonical-private-synchronous:backlight -h int:value:$(brightnessctl g)

# Select region for screenshot
bindl = SHIFT, F1,    exec, grim -g "$(slurp)" - | swappy -f -
bindl =,       Print, exec, XDG_CURRENT_DESKTOP=sway XDG_SESSION_DESKTOP=sway QT_QPA_PLATFORM=wayland flameshot gui
# Select window for screenshot
bindl = SHIFT, Print, exec, ~/.config/hypr/ss.sh
# Fullscreen screenshot
bindl = ALT,   Print, exec, grim - | swappy -f -
