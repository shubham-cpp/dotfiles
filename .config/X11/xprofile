#!/bin/env sh
run() {
	if ! pgrep "$1"; then
		if [ "$XDG_SESSION_TYPE" = "wayland" ]; then
			XDG_CURRENT_DESKTOP=Unity $@ &
		else
			$@ &
		fi
	fi
}

if [ "$XDG_SESSION_TYPE" != "wayland" ]; then
	# bash ~/.local/bin/myscripts/default_mouse_settings &
	# setxkbmap -option 'ctrl:nocaps' -option 'shift:both_capslock'
	# xcape -e 'Control_L=Escape'
	# numlockx on
	xset -b
	xset r rate 300 50
	xsetroot -cursor_name left_ptr
	xrdb ~/.config/X11/Xresources
fi

run_polkit() {
	# run lxpolkit
	if [ -x /usr/lib/polkit-kde-authentication-agent-1 ]; then
		run /usr/lib/polkit-kde-authentication-agent-1
	elif [ -x /usr/libexec/kf5/polkit-kde-authentication-agent-1 ]; then
		run /usr/libexec/kf5/polkit-kde-authentication-agent-1
	elif [ -x "$(which lxpolkit)" ]; then
		run lxpolkit
	elif [ -x /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 ]; then
		run /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1
	elif [ -x /usr/libexec/polkit-gnome-authentication-agent-1 ]; then # polkit-gnome kde
		run /usr/libexec/polkit-gnome-authentication-agent-1
	else
		run polkit-gnome-authentication-agent-1
	fi
}
basic() {
	# bash ~/.local/bin/myscripts/if_void &
	run_polkit
	# run dunst
	if [ "$XDG_SESSION_TYPE" != "wayland" ]; then
		if [ -x /bin/picom ]; then
			# run picom -b #--experimental-backends
			run /usr/local/bin/picom --experimental-backends -b
		elif [ -x /bin/xcompmgr ]; then
			run xcompmgr -c -C -t-5 -l-5 -r4.2 -o.8
		fi
		setsid -f xset r rate 300 50
		if [ -x /bin/xwallpaper ]; then
			run xwallpaper --stretch ~/.config/wall.png
		else
			run feh --bg-fill --no-fehbg -q ~/.config/wall.png
		fi
	fi
	# run kitty
	TERM=xterm-256color alacritty -e "tmux" &
}

case "$DESKTOP_SESSION" in
bspwm | awesome | qtile | dk | Qtile)
	basic
	xset -b
	xset r rate 300 50
	;;
dwm)
	basic
	# run dwmblocks
	run goblocks
	run sxhkd -c ~/.config/sxhkd/dwm_sxhkdrc
	xset -b
	xset r rate 300 50
	;;
hyprland | Hyprland)
	run_polkit
	# if [ -x /bin/picom ]; then
	# 	# run picom -b #--experimental-backends
	# 	run /usr/local/bin/picom --experimental-backends -b
	# fi
	;;
esac

[ "$XDG_SESSION_TYPE" != "wayland" ] && run redshift -m randr -l manual -l '18.520430:73.856743' -g 0.8 -b '0.9:0.7'
run udiskie -q -t --no-terminal
run nm-applet
run greenclip daemon
[ "$XDG_SESSION_TYPE" != "wayland" ] && run flameshot
[ "$XDG_SESSION_TYPE" != "wayland" ] && run imwheel
run kmonad ~/.config/kmonad/mkmonad.kbd
run thunar --daemon
