#!/usr/bin/env bash

append_path() {
  case ":$PATH:" in
  *":$1:"*) : ;; # already there
  *)
    if [ "$2" = "check" ]; then
      [ -d "$1" ] && PATH="$PATH:$1"
    else
      PATH="$PATH:$1"
    fi
    ;;
  esac
}
paths=(
  "$HOME/.local/bin/"
  "$HOME/.local/bin/myscripts/"
  "$HOME/.local/share/npm/bin/"
  "$HOME/.config/suckless/dwm/status/scripts/"
  "$HOME/.turso"
)

for p in "${paths[@]}"; do
  append_path "$p"
done
# PATH="$PATH:$HOME/.local/bin/:$HOME/.local/bin/myscripts/"
# PATH="$PATH:$HOME/.local/share/luarocks/bin/:$HOME/.local/share/golib/bin/:$HOME/.local/share/npm/bin/"
# PATH="$PATH:$HOME/.config/suckless/dwm/status/scripts/"
# PATH="$PATH:$HOME/.turso"
# [ -d "$HOME/.local/share/bob/nvim-bin" ] && PATH="$PATH:$HOME/.local/share/bob/nvim-bin"

export EDITOR=nvim
export VISUAL=nvim

export TERMINAL=alacritty
export FILE_BROWSER=thunar
export BROWSER=brave
export READER=zathura

if [ $DESKTOP_SESSION != "plasma" ]; then
  export QT_QPA_PLATFORMTHEME="qt5ct"
  export QT_AUTO_SCREEN_SCALE_FACTOR=0
fi

# ~/ Clean-up:
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_CACHE_HOME="$HOME/.cache"
if [ "$XDG_SESSION_TYPE" = "wayland" ]; then
  export MOZ_ENABLE_WAYLAND=1
  export _JAVA_AWT_WM_NONREPARENTING=1
  # export XCURSOR_SIZE=24
fi
export GTK_RC_FILES="${XDG_CONFIG_HOME:-$HOME/.config}"/gtk-1.0/gtkrc
export GTK2_RC_FILES="${XDG_CONFIG_HOME:-$HOME/.config}/gtk-2.0/gtkrc":"${XDG_CONFIG_HOME:-$HOME/.config}/gtk-2.0/gtkrc.mine"
export PARALLEL_HOME="$XDG_CONFIG_HOME"/parallel
export ZDOTDIR="${XDG_CONFIG_HOME:-$HOME/.config}/zsh"
export WINEPREFIX="${XDG_DATA_HOME:-$HOME/.local/share}/wineprefixes/default"
export WGETRC="${XDG_CONFIG_HOME:-$HOME/.config}/wget/wgetrc"
# export WINEESYNC=1
export MOZ_USE_XINPUT2="1"
export ASDF_CONFIG_FILE="${XDG_CONFIG_HOME:-$HOME/.config}/asdf/asdfrc"
export ASDF_DATA_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/asdf"
# export ANDROID_SDK_HOME="${XDG_CONFIG_HOME:-$HOME/.config}/android"
# export ADB_VENDOR_KEY="$XDG_CONFIG_HOME"/android
# export ANDROID_EMULATOR_HOME="$XDG_DATA_HOME"/android/
# export ANDROID_HOME=$HOME/Android/Sdk
# export ANDROID_EMULATOR_HOME="$HOME"/.android/
# export ADB_VENDOR_KEY="$HOME"/.android/
# export PATH=$PATH:$ANDROID_HOME/emulator
# export PATH=$PATH:$ANDROID_HOME/platform-tools
# export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin
export ANDROID_HOME="$HOME/Android/Sdk"
# [ -d "$ANDROID_HOME" ] && export PATH="$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/cmdline-tools/latest:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH"
export MYSQL_HISTFILE="${XDG_DATA_HOME:-$HOME/.local/share}/mysql_history"
export PSQLRC="$XDG_CONFIG_HOME/pg/psqlrc"
export PSQL_HISTORY="$XDG_STATE_HOME/psql_history"
export PGPASSFILE="$XDG_CONFIG_HOME/pg/pgpass"
export PGSERVICEFILE="$XDG_CONFIG_HOME/pg/pg_service.conf"
export RLWRAP_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/rlwrap"
export CUDA_CACHE_PATH="$XDG_CACHE_HOME"/nv
# export ANDROID_AVD_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/android/"
export CARGO_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/cargo"
export RUSTUP_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/rustup"
export OPAMROOT="${XDG_DATA_HOME:-$HOME/.local/share}/opam"
[ -x "$CARGO_HOME/env" ] && . "$CARGO_HOME/env"
export GOPATH="${XDG_DATA_HOME:-$HOME/.local/share}/golib"
export GOPATH="$GOPATH:$HOME/Documents/Programming/GoLang"
export NPM_CONFIG_USERCONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/npm/npmrc"
export NODE_REPL_HISTORY="${XDG_DATA_HOME:-$HOME/.local/share}/node_repl_history"
export ICEAUTHORITY="${XDG_CACHE_HOME:-$HOME/.cache}/ICEauthority"
export RXVT_SOCKET="$XDG_RUNTIME_DIR"/urxvtd
export SCREENRC="$XDG_CONFIG_HOME"/screen/screenrc
export WORKON_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/virtualenvs"
export PYLINTHOME="$XDG_CACHE_HOME/pylint"
export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter"
export JUPYTERLAB_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/jupyter/lab"
export IPYTHONDIR="$XDG_CONFIG_HOME/jupyter"
export PYTHON_HISTORY=$XDG_STATE_HOME/python/history
export PYTHON_EGG_CACHE="$XDG_CACHE_HOME/python-eggs"
export PYTHONPYCACHEPREFIX=$XDG_CACHE_HOME/python
export PYTHONUSERBASE=${XDG_DATA_HOME:-$HOME/.local/share}/python
export REDISCLI_HISTFILE="${XDG_DATA_HOME:-$HOME/.local/share}"/redis/rediscli_history
export REDISCLI_RCFILE="$XDG_CONFIG_HOME"/redis/redisclirc
export MYPY_CACHE_DIR="$XDG_CACHE_HOME"/mypy
export CONDARC="$XDG_CONFIG_HOME/conda/condarc"
export GRIPHOME="$XDG_CONFIG_HOME/grip"
export XINITRC="$XDG_CONFIG_HOME/X11/xinitrc"
export XSERVERRC="$XDG_CONFIG_HOME/X11/xserverrc"
export INPUTRC="$XDG_CONFIG_HOME"/readline/inputrc
export XCOMPOSEFILE="$XDG_CONFIG_HOME/X11/xcompose"
export XCOMPOSECACHE="$XDG_CACHE_HOME/X11/xcompose"
export GRADLE_USER_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/gradle"
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
export MACHINE_STORAGE_PATH="${XDG_DATA_HOME:-$HOME/.local/share}"/docker-machine
export LEIN_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/lein"
export LESSHISTFILE=-
export DENO_INSTALL="${XDG_CONFIG_HOME:-$HOME/.config}/deno"
# [ -d "$DENO_INSTALL" ] && export PATH="$PATH:$DENO_INSTALL/bin"
export BUN_INSTALL="${XDG_DATA_HOME:-$HOME/.local/share}/bun"
# [ -d "$BUN_INSTALL" ] && export PATH="$BUN_INSTALL/bin:$PATH"
# export LESSOPEN="| /usr/bin/highlight -O xterm256 --style=leo %s 2>/dev/null"
# export LESS='-q -F -i -J -M -W -x4 -z-4 -R --use-color'
export LESS='-R --use-color -Dd+r$Du+b'
# export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
export _JAVA_AWT_WM_NONREPARENTING=1
# export GNUPGHOME="${XDG_DATA_HOME:-$HOME/.local/share}"/gnupg
# [ -d "$HOME/Downloads/GitClones/void-packages" ] && export XBPS_DISTDIR="$HOME/Downloads/GitClones/void-packages"
# [ -d "$XDG_CACHE_HOME/fnm-install" ] && export PATH="$PATH:$XDG_CACHE_HOME/fnm-install:$HOME/Documents/Programming/Flutter/flutter/bin"
export FZF_DEFAULT_COMMAND="rg --files --hidden --follow -g '!{node_modules/,.venv/,venv,.git/,.github,dist,android/,ios/,build/,vendor/}'"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd -t d -H -L --ignore-file ~/.config/git/ignore"
export FZF_DEFAULT_OPTS="--cycle --marker='+' --keep-right"
# remember --bind KEY:ACTION or EVENT:ACTION
# eval $(dircolors "$XDG_CONFIG_HOME"/dir_colors)
# export XCURSOR_PATH=${XCURSOR_PATH}:~/.local/share/icons
export GHCUP_USE_XDG_DIRS="$HOME"/.config
export STACK_ROOT="${XDG_DATA_HOME:-$HOME/.local/share}/stack"
export CABAL_CONFIG="$XDG_CONFIG_HOME"/cabal/config
export CABAL_DIR="$XDG_CACHE_HOME"/cabal
# export PYENV_ROOT="$HOME/.config/pyenv"
# export PATH="$PATH:$PYENV_ROOT/bin/"
# eval "$(pyenv init --path)"
# Ignore certain files while completing
export FIGNORE=".class:.out:.hi:.o"
export MICRO_TRUECOLOR=1
export ZK_NOTEBOOK_DIR="$HOME/Documents/Notes"
export MIX_XDG="true"
export FFMPEG_DATADIR="$XDG_CONFIG_HOME"/ffmpeg
export RIPGREP_CONFIG_PATH="${XDG_CONFIG_HOME:-$HOME/.config}/ripgreprc"
export BASH_COMPLETION_USER_FILE="$XDG_CONFIG_HOME"/bash-completion/bash_completion

checked_paths=(
  "$HOME/.local/share/bob/nvim-bin"
  "$HOME/Downloads/GitClones/void-packages"
  "$XDG_CACHE_HOME/fnm-install"
  "$HOME/Documents/Programming/Flutter/flutter/bin"
  "$DENO_INSTALL/bin"
  "$BUN_INSTALL/bin"
  "$ANDROID_HOME/emulator"
  "$ANDROID_HOME/tools"
  "$ANDROID_HOME/tools/bin"
  "$ANDROID_HOME/cmdline-tools/latest"
  "$ANDROID_HOME/cmdline-tools/latest/bin"
  "$ANDROID_HOME/platform-tools"
)
for p in "${checked_paths[@]}"; do
  append_path "$p" "check"
done
# [ -r /etc/profile.d/flatpak.sh ] && . /etc/profile.d/flatpak.sh
# Deduplicate entries in PATH
# PATH="$(echo $PATH | tr ':' '\n' | awk '{print length, $0}' | sort -n | cut -d' ' -f2 | uniq | tr '\n' ':' | rev | cut -c2- | rev)"
export PATH
